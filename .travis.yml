language: php

env:
  global:
  matrix:
    - DOCKERFILE=vaapi

services:
  - docker

before_install:
  - export FROM_IMAGE=jrottenberg/ffmpeg:snapshot-${DOCKERFILE}
  - export THIS_LABEL=${DOCKERFILE}-${TRAVIS_BRANCH}
  - if [[ "${TRAVIS_BRANCH}" == "master" ]]; then export THIS_LABEL=${DOCKERFILE}; fi
  - export THIS_FULL_IMAGE=${THIS_REGISTRY}/${THIS_REPO}/${THIS_IMAGE}:${THIS_LABEL}
  - export CACHE_FROM_IMAGE=${THIS_REGISTRY}/${THIS_REPO}/${THIS_IMAGE}:${DOCKERFILE}
  - sudo mkdir -p "/etc/docker/certs.d/${THIS_REGISTRY}"
  - openssl s_client -showcerts -connect ${THIS_REGISTRY} < /dev/null 2> /dev/null | openssl x509 -outform PEM | sudo tee "/etc/docker/certs.d/${THIS_REGISTRY}/ca.crt"
  - if [[ "${FFMPEG_REGISTRY}" != "${THIS_REGISTRY}" ]]; then
      sudo mkdir -p "/etc/docker/certs.d/${FFMPEG_REGISTRY}";
      openssl s_client -showcerts -connect ${FFMPEG_REGISTRY} < /dev/null 2> /dev/null | openssl x509 -outform PEM | sudo tee "/etc/docker/certs.d/${FFMPEG_REGISTRY}/ca.crt";
    fi

install:
  - echo ${FFMPEG_REGISTRY_PASSWORD} | docker login --username ${FFMPEG_REGISTRY_USERNAME} --password-stdin ${FFMPEG_REGISTRY}
  - echo ${THIS_REGISTRY_PASSWORD} | docker login --username ${THIS_REGISTRY_USERNAME} --password-stdin ${THIS_REGISTRY}
  - if [[ ! ${TRAVIS_BRANCH} =~ (master|v.*) ]]; then 
        echo "Pulling ${CACHE_FROM_IMAGE}"; 
        docker pull ${CACHE_FROM_IMAGE} || true; 
    else
        export CACHE_FROM_ARGS="--no-cache"; 
    fi

script:
  - set -e
  - cd travis/
  - ./build.sh
  - ./test.sh

after_success:
  - ./push.sh
