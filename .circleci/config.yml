# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
    docker: circleci/docker@1.5.0

# Orchestrate or schedule a set of jobs
jobs:
  build:
    environment:
      DOCKERFILE: vaapi
#    machine: true
    machine:
      image: 'ubuntu-2004:202010-01'
    steps:
      - run:
          name: Dependencies
          command: |
            apt-get update
            apt-get -y install php
      - run:
          name: Custom enviroment variables
          command: |
            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              echo 'export THIS_LABEL=${DOCKERFILE}' >> ${BASH_ENV}
            else 
              echo 'export THIS_LABEL=${DOCKERFILE}-${CIRCLE_BRANCH}' >> ${BASH_ENV}
            fi
            if [[ ! "${CIRCLE_BRANCH}" == "master" ]] && [[ ! ${CIRCLE_BRANCH} == v* ]]; then
              echo 'export CACHE_FROM_IMAGE=${THIS_REGISTRY}/${THIS_IMAGE}:${DOCKERFILE}' >> ${BASH_ENV}
            fi
            cat ${BASH_ENV}
      - docker/check:
          docker-username: THIS_REGISTRY_USERNAME
          docker-password: THIS_REGISTRY_PASSWORD
          registry: $THIS_REGISTRY
      - checkout
      - run:
          name: Build
          command: ./build.sh
#      - docker/build:
#          image: ${THIS_IMAGE}
#          tag: ${THIS_LABEL}
#          dockerfile: Dockerfile.${DOCKERFILE}
#          registry: $THIS_REGISTRY
#          cache_from: ${CACHE_FROM_IMAGE}
#          extra_build_args: --build-arg FROM_IMAGE=jrottenberg/ffmpeg:snapshot-${DOCKERFILE}
      - docker/push:
          registry: $THIS_REGISTRY
          image: ${THIS_IMAGE}
          tag: ${THIS_LABEL}
      - run:
          name: Build docker image
          command: |
            echo "FROM_IMAGE=${FROM_IMAGE}"
            echo "THIS_LABEL=${THIS_LABEL}"
            echo "DOCKERFILE=${DOCKERFILE}"
            echo "CIRCLE_BRANCH=${CIRCLE_BRANCH}"
            cd travis
            ./build.sh
